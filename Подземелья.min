# Подземелья.min по мотивам книги-игры "Подземелья Черного Замка"
# Copyright 2002 © by Andrey Ivushkin <ivushkin@lnau.lg.ua>
# Author: Andrey Ivushkin
# Email: ivushkin@lnau.lg.ua
# Created: 28.10.02 9:20
# Last Modified: 05.11.02 16:13
def(build_world())
    map_new("world", "World",81,69)
    map_fill("world", 0, 0, Terrain$[""], join$(
		"f~~~~~~~~~~~~~~~ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n",
		"fff~~~~~~~~~~~~~ffffffffffffffffffff.....fffffffffffffffffffffffffffffffffffffff\n",
		"ffff~~~~~~~~~~~~~fffffffffffffffffff.fff..........ffffffffffffffffffffffffffffff\n",
		"fff~~~~~~~~~~~~~~~fffffffffffff........@fffffffff...ffffffffffffffffffffffffffff\n",
		"ffffffff~~~~~~~~~~~~fff...fffff.fffffwwwwwfffffffff..ffff...ffffffffffffffffffff\n",
		"fffffffffff~~~~~~~~~....f.......ffffww...wwfffffffff..fff.f.ffffffffffffffffffff\n",
		"ffffffffffff~~~~~~~~~~fffffffff......w...w.......ffff.....f.ffffffffffffffffffff\n",
		"ffffffffff...~~~~~~~ffffff......ffffww...wwfffff.ffffffffff.ffffffffffffffffffff\n",
		"fffffffff...fff~~~~~~~ffff.fff.ffffffwwwwwfff....ffffffffff.ffffffffffffffffffff\n",
		"fffffffff.f......~~~~ff....fff.ffffffff.......ff.ffffffffff.ffffffffffffffffffff\n",
		"fffffffff.fffff.f~~~~~~.ffffff..fffffffff.ffffff.ffffff.....ffffffffffffffffffff\n",
		"f@...fff..fffff....bbb..f~~ffff.fffffffff..fffff....fff.ffffffffffffffffffffffff\n",
		"ffff.fff.fffffffff~~~~~~~~fffff....fffffff...ffffff.fff..fffffffffffffffffffffff\n",
		"fff..fff...ffffffff~~~~~~~~~~fffff.fffffffff.ffffffgggff...fffffffffffffffffffff\n",
		"fff.ffffff.fffff~~~~~~~fff~~ff.....fffffffff...fffgggggfff.fffffffffppffffffffff\n",
		"ff..ff.....fffff~~~~~~fff~~~~f.fffffffffffffff..ffggggg.........ffff..ffffffffff\n",
		"ff.fff.fffffff~~~~~f~~fff~~~~..ffffffffffffffff..ffgggfffffffff....ff.ffffffffff\n",
		"ff.ff..ffffff~~~~ffff~~~f~~~..ffffffffffff~~~~ff.ffff........fffff....ffffffffff\n",
		"ff.ff.fffffff~~ffffff~~~~~~~B~~~~~~~~~~~~~~~~~ff...ffff.ffff.....ffff.....ffffff\n",
		"ff.......ffff~ffffffff~~~~~~B~~~~~~fff~~~~~~ffffff.ffff...ffffff.ffff.fff.ffffff\n",
		"fffff.ff..fff~~ffffffff~~~~~B~~~~~~~~~~~~~~fffffff.ffffff.ffffff..fff.fff@ffffff\n",
		"ffff..fff.ffff~~~~~~fff~~~~f.fff~~~~~fffffffffffff.ffffff.fffffff..ff..fffffffff\n",
		"ffff.fff..ffffffffffffffffff.ffffffffff......fffff....fff....fffff.fff.ff....fff\n",
		"fff..fff.ffffffffffffffffff.......fff...vvvv.ffffffff.ffffff.fffff.hff....ff.fff\n",
		"fff.ffff.ffffffffffffffff...fffff.fff.vvvvvv.ffffffff..fffff..ffff.ffffffff..fff\n",
		"fff.ffff.f.......ffffffff.f..ffff.....vvvvvv.fffffffff..fffff.ff....ffffff..ffff\n",
		"f...ffff.f.fffff.ffffffff.ff.ffffff..vvvvvvv.ffffffffff.fffff.f..ff.....ff.fffff\n",
		"f.ffffff...fffff..........ff.ffffff.vvvvvvvv.ffffffffff****.....fffffff.ff.fffff\n",
		"f.fffffffffffffff///ffffffff.ffffff.vvvvvvvv..ffffffft****fffffffff.....ff...fff\n",
		"f....fffffffffff/////fffff...ffffff.vvvvvvvvv.ffffff****ffffffffff..ffffffff.fff\n",
		"ffff..ffffffffff/////fffff.fffffff..vvvvvvvvv.ffff*****ffffffffff..ffffffff..fff\n",
		"fffff.fffffffffff///.fffff.fffff...vvvvvvvvvv.fff****f..fffffffff.fffffffff.ffff\n",
		"ff....fffffff.....ff.........fff.vvvvvvvvvvvv.ff***f.ff..fffffffkkffffffff..ffff\n",
		"f..fffff......fff.ff.ffff.ff.....vvvvvvvvvvvv.ffffff.fff.fffffffkkffffffff.fffff\n",
		"f.ffff...ffffffff.ff.fff..fffffffvvvvvvvvvvvv.ffffff.fff.fffffff.fffffffff.fffff\n",
		"f......fffffffff..ff..ff.ffffffffvvvvvvvvvvvv.ffffff..ff.mffffff.fffffffff..ffff\n",
		"f.ffff...fdddddd.ffff.ff..ffffffffvvvvvvvvvv..fffffff....fffffff.ffffffffff.ffff\n",
		"f.ffffdddddddddd..fff.fff.ffffffffvvvvvvvvvv.....@.....fffffffff......ff........\n",
		"f...ffddddddddddf.fff.fff.ffffffffvvvvvvvv...fff...fff.fffffff...f.ff....ff.ffff\n",
		"fff.fdddddddddddf..ff.ff..fffffffffvvvvvv..fffffffff...fffff...fff..fffffff.ffff\n",
		"ff..fdddddddddddff.......fffffffffffvvvv..fffffffff..fffff...fff....ffffff..ffff\n",
		"ff.ffffdddddddddfffff.ff..fffffffffff....ffffffffff.ffffff.ffff..ff..fffff.fffff\n",
		"ff.ffffdddddddddfffff.fff...fffffffff.fffffffffffff.fff....f....ffff.fffff...fff\n",
		"ff.fffddddddddddfffff..ffff.fffffff...fffffffffffff.fff.ffff.zffffff.fffffffffff\n",
		"f..fffddddddddddffffff.ffff....ffff.ffffffffffffff..ff..ffff..ffffff..ffffffffff\n",
		"f.ffdddddddddddddddddd..ffffff.....y.....fffffffff.ff..ffffff....ffff.ffffff.fff\n",
		"f.ffdfddddddddddddddddf....ffffffff.ffffffffff.....ff.ffffffffff.fff..fff....fff\n",
		"f.fddfdddddddddddddddd...f..fffffff.fffffffff..ff.ff..ff..fffff..ff..~~~~~~~~fff\n",
		"f.fddffffddddddddddddd.ffff...fffff.......ff..f...f..ffff.fffff.fff.~~~~~~~~~~~~\n",
		"f.fdddffdfddddddddf.....fffff.fffffffffff.f..ff.fff.fffff...fff..ff.~~~~~~~~~~~~\n",
		"f...fffddddddddddd..fff...fff.....fff.......fff..f..fffffff.ffff.ff.~~~~~~~~~~~~\n",
		"fff.fffdddddddddddddddf.fffffffff.....fff.ffffff.f.fff.....y..ff.ff..~~~~~~~~~~~\n",
		"ff..ffffffddddddddddddf..fffffffffffffff..ff...........ffff.f....fff.~~~~~~~~~~~\n",
		"ff.ffff---ffddffddddddff.ffff......fffff.ff@.fff.fttffffff..ffffffff.~~~~~~~~~~~\n",
		"ff...f--v---ffffddddddff......ffff.fffff.fffff......tffff..ffffffff..~~~~~~~~~~~\n",
		"ffffvvvvvvv---fffdddddddf.fff...ff...fff.fffff.fffftfffff.~~~~fffff.f~~~~~~~~~~~\n",
		"fff-vvvvvvvvv--fffddddddf..ffff..fff.fff.fffff.ffffffffff..~~~~fffff.~~~:oo~~~~~\n",
		"fff-vvvvvvvvvv----fddd.fff....ff.fff.fff.ffff..fffffffff.~~~~~~~fff.~~~o:o:o~~~~\n",
		"fff---vvvvvvvvvvv-ffff...ffff..f..ff.fff.fff..ffffffffff.~~~~~~~~~~~~~~~o:oo~~ff\n",
		"fffff--vvvvvvvvvv-ffffff..ffff.ff.ff.fff..ff.fffffffffff.~~~~~~~~~~~~~~~~~oo~~~~\n",
		"ffffff---vvvvvvv--fffffff......ff.ff.ffff.f....fffffffff.~~~~~~~~~~~~~~~~~~~~~~~\n",
		"ffffffff--vvvvvv-fffffffffffff.ff..f.f....f.ff.fffffffff...~~~~~~~~~~~~~~~~~~~~~\n",
		"fffffffff---vvvv......fff......fff.....ffff.tf...fffffffft.tf~~~~~~~~~~~~~~~~~~~\n",
		"fffffffffff-----fffff..ff.ffffffffff.ffffff..fff...fffffft..~~~~~~~~~~~~~~~~~~~~\n",
		"ffffffffffffffffffffff.ff.f..........f....jn.jfffn.jn......t~~~~~~~..~~~~~~~~~ff\n",
		"ffffffffffffffffffffff......ffffffff...ff.............cfl.fffffff~...~~ff~f..fff\n",
		"fffffffffffffffffffffffffu.uffffffffff.ff.cffffffffffffff..fff......ff.ffff.fdft\n",
		"fffffffffffffffffffffffffffffffffffffffff.ffffffffffffffff.....ffff....ffffftttt\n",
		))
	;

def(_intro())
	st_trigger("world",quest_tick())
	trig("Wounded","world",38,64)
	trig("spider1","world",44,63)
	trig("spider0","world",44,60)
	trig("dryad","world",36,63)
	trig("hien","world",32,58)
	trig("bridge11","world",59,52)
	trig("bridge21","world",58,51)
	trig("bridge12","world",35,46)
	trig("bridge22","world",36,45)
	trig("village1","world",21,63)
	trig("three_assassins1","world",17,32)
	trig("three_assassins2","world",20,31)
	trig("honest_trader","world",46,54)
	trig("guide","world",23,51)
	trig("green_knight1","world",1,47)
#	trig("","world",,)
#	trig("","world",,)
#	trig("","world",,)
#	trig("","world",,)
#	trig("","world",,)
#	trig("","world",,)
#	trig("","world",,)
#	trig("","world",,)
#	trig("","world",,)
#	trig("","world",,)
#	trig("","world",,)
#	trig("","world",,)
#	trig("","world",,)
#	trig("","world",,)
#	trig("","world",,)
#	trig("","world",,)
#	th_moveto("player","world",1,48)
	;

def(bridge(layer))
	if(eq(layer,LAYER_Under),let(l$,"0101"),let(l$,"1010"))
	ter_walls(Terrain$["y"],l$)
	ter_tile(Terrain$["y"],layer,"images/floor/path_ns",1,1)
	;

def(newgame())
	set_globals()
    window_color("white", "black")
    output_color("white", "black")
    output("\n       ",GAME$)
    output("  Copyright 2002 © by Andrey Ivushkin")
    output("       <ivushkin@lnau.lg.ua>\n")
	output("Создается игровой мир...\n")
	build_world()
	build_player()
	_intro()
	_buildings()
	output("\n\t\tГотово.\n")
	;

def(build_player())
    st_name("player", "Willow")
    stats_lock(1)
	set_stats("player",20,20,15,15,1)
    st_prop("player","luck",add(d(1,6),6))
    th_statmax("player",ST_HitPoints,30)
#   output("Your luck is ",st_get_prop("player","luck"))
#   for(i,1,6,1,output(check_luck()))
    en_secondary("player")
    th_stat("player",ST_Attack,15)
    th_stat("player",ST_Evade,10)
    th_gold("player", 15)
	st_prop("player","bulb_water",4)
	st_prop("player","bag_room",7)
    stats_lock(0)
    # Give the player some simple magic spells
	en_magic("player","Где я?",debugWhereAmI())
	en_magic("player","Телепортироваться",debugTeleport())
#	spell_select(5)
	let(id$,tempid$())
    let(id$,create_it$("Меч","images/weapon/dagger3",1,1))
    it_equip(id$,EQ_Weapon)
    pl_equip("player",id$)
    it_new("Bulb","Фляга с водой")
    st_prop("Bulb","hp",2)
    th_tile("Bulb",0,"images/item/bulb_purple",1,1)
    it_removefunc("Bulb",no_remove())
    st_trigger("Bulb",drink_bulb())
    pl_take("player","Bulb")
    th_moveto("player", "world",41,67)
	;

def(spell_select(count))
	let(opt$,"Левитация|Огонь|Иллюзия|Сила|Слабость|Копия|Исцеление|Плавание")
	for(i,1,count,1,
		let(text$,join$("Выберите ",str$(i),"-е заклятье:",)),
		let(ch,menu("Обучение магии",text$,opt$,0)),
		let(spell$,word$(opt$,ch,"|")),
		output("Got ",spell$," spell"),
		let(n$,join$(str$(i)," ",spell$)),
		output(n$),
		en_magic("player",n$,pl_spell(i,n$))
	)
	;

def(pl_spell(num,id$))
	output(num," ",id$)
	let(x,th_get_x("player"))
	let(y,th_get_y("player"))
	if(eq(num,1),do(output("spell"),return(1)))
#	if(eq(num,1),do( ,return(1)))
#	if(eq(num,1),do( ,return(1)))
#	if(eq(num,1),do( ,return(1)))
#	if(eq(num,1),do( ,return(1)))
#	if(eq(num,1),do( ,return(1)))
#	if(eq(num,1),do( ,return(1)))
#	if(eq(num,1),do( ,return(1)))
#	if(eq(num,1),do( ,return(1)))
#	if(eq(num,1),do( ,return(1)))
	return(1)
	;

def(check_luck())
	st_prop("player","luck",sub(st_get_prop("player","luck"),1))
	return(le(d(2,6),st_get_prop("player","luck")))
	;

def(trig(id$,mapid$,x,y))
	ter_new(id$,"")
	ter_tile(id$,LAYER_Under,"images/ground/grass",1,1)
	st_trigger(id$,_trig_func())
	gr_terrain(mapid$,x,y,id$)
	;

def(_trig_func())
	if(ne(actorid$,"player"),return(1))
	quest("")
	st_trigger(targetid$,0)
	if(eq(targetid$,"spider1"),do(st_trigger("spider0",0),spider(1),return(1)))
	if(eq(targetid$,"spider0"),do(st_trigger("spider1",0),spider(0),return(1)))
	if(eq(targetid$,"dryad"),do(dryad(),return(1)))
	if(eq(targetid$,"hien"),do(hien(),return(1)))
	if(eq(left$(targetid$,7),"bridge1"),do(bridge(LAYER_Under),return(1)))
	if(eq(left$(targetid$,7),"bridge2"),do(bridge(LAYER_Over),return(1)))
	if(eq(targetid$,"Wounded"),do(wounded(),return(1)))
	if(eq(targetid$,"village1"),do(small_village(),return(1)))
	if(eq(targetid$,"three_assassins1"),do(st_trigger("three_assassins2",0),three_assassins(),return(1)))
	if(eq(targetid$,"three_assassins2"),do(st_trigger("three_assassins1",0),three_assassins(),return(1)))
	if(eq(targetid$,"honest_trader"),do(
		let(t$,trader_appear$()),
		trig("no_trader","world",48,53),
		st_trigger("no_trader",trader_disappear(t$)),
		return(1)
	))
	if(eq(targetid$,"guide"),do(guide(),return(1)))
	if(eq(targetid$,"green_knight1"),do(gk_onway(),return(1)))
#	if(eq(targetid$,""),do(			,return(1)))
#	if(eq(targetid$,""),do(			,return(1)))
#	if(eq(targetid$,""),do(			,return(1)))
#	if(eq(targetid$,""),do(			,return(1)))
#	if(eq(targetid$,""),do(			,return(1)))
#	if(eq(targetid$,""),do(			,return(1)))
#	if(eq(targetid$,""),do(			,return(1)))
#	if(eq(targetid$,""),do(			,return(1)))
#	if(eq(targetid$,""),do(			,return(1)))
#	if(eq(targetid$,""),do(			,return(1)))
#	if(eq(targetid$,""),do(			,return(1)))
	;

def(build_ter(var$, char$, name$, basefile$, nframes, walls$, opa))
    let(ter$, tempid$())
    setglobal(var$, char$, ter$)
    ter_new(ter$, name$)
    ter_tile(ter$, LAYER_Under, basefile$, 1, nframes)
    ter_walls(ter$, walls$)
    ter_opa(ter$, opa)
    ;

def(set_globals())
	quest("")
	tick_set(0)
	global(GAME$,"Подземелья Черного Замка")
	global(BULB$,"Ваша фляга пуста.")
	global(TODO$,"Что Вы сделаете?")
	global(TOSAY$,"Что Вы скажете ")
	global(YESNO$,"Да|Нет")
	let(ter$,"Terrain$")
    build_ter(ter$, ".", "", "images/ground/grass", 1, "0000", OPA_None)
    build_ter(ter$, "*", "", "images/ground/road", 1, "0000", OPA_None)
    build_ter(ter$, "@", "", "images/ground/lava", 5, "0000", OPA_None)
    build_ter(ter$, "b", "", "images/ground/bridge_ew", 1, "0000", OPA_None)
    build_ter(ter$, "B", "", "images/ground/bridge_ns", 1, "0000", OPA_None)
    build_ter(ter$, "g", "", "images/floor/floor_cobble", 1, "0000", OPA_None)
    build_ter(ter$, "h", "", "images/floor/floor_cobble", 1, "0000", OPA_None)
    build_ter(ter$, "p", "", "images/wild/town_brown", 1, "0000", OPA_None)
    build_ter(ter$, "t", "", "images/ground/tree_oak", 1, "0000", OPA_Partial)
    build_ter(ter$, "k", "", "images/cavern/floor_dirt6", 1, "0000", OPA_None)
    build_ter(ter$, "m", "", "images/floor/floor_cobble", 1, "0000", OPA_None)
    build_ter(ter$, "v", "", "images/floor/floor_cobble", 1, "0000", OPA_None)
    build_ter(ter$, "n", "", "images/floor/floor_cobble", 1, "0000", OPA_None)
    build_ter(ter$, "z", "", "images/floor/floor_cobble", 1, "0000", OPA_None)
    build_ter(ter$, "i", "", "images/floor/floor_cobble", 1, "0000", OPA_None)
    build_ter(ter$, "a", "", "images/floor/floor_cobble", 1, "0000", OPA_None)
    build_ter(ter$, "r", "", "images/floor/floor_cobble", 1, "0000", OPA_None)
    build_ter(ter$, "o", "", "images/ground/weeds5", 1, "0000", OPA_None)
    build_ter(ter$, ":", "", "images/ground/tree_cherry", 1, "1111", OPA_None)
    build_ter(ter$, "w", "mountain", "images/ground/mountain", 1, "1111", OPA_Full)
    build_ter(ter$, "~", "water", "images/ground/water", 2, "1111", OPA_None)
    build_ter(ter$, "u", "", "images/ground/tree_apple", 1, "0000", OPA_None)
    build_ter(ter$, "y", "", "images/floor/path_ns", 1, "0000", OPA_None)
    build_ter(ter$, "-", "", "images/floor/floor_cobble", 1, "0000", OPA_None)
#    build_ter(ter$, "-", "", "images/wild/fence_white_ew", 1, "1111", OPA_Partial)

    build_ter(ter$, "f", "", "images/ground/forest", 1, "0000", OPA_Partial)
    build_ter(ter$, "l", "", "images/ground/forest_sw", 1, "0000", OPA_Partial)
    build_ter(ter$, "n", "", "images/ground/forest_nw", 1, "0000", OPA_Partial)
    build_ter(ter$, "j", "", "images/ground/forest_ne", 1, "0000", OPA_Partial)
    build_ter(ter$, "c", "", "images/ground/forest_es", 1, "0000", OPA_Partial)
    build_ter(ter$, "/", "", "images/ground/sand_weeds", 1, "0000", OPA_None)

    build_ter(ter$, "d", "", "images/ground/swamp", 1, "0000", OPA_None)
    build_ter(ter$, "L", "", "images/ground/swamp", 1, "0000", OPA_None)
    build_ter(ter$, "N", "", "images/ground/swamp", 1, "0000", OPA_None)
    build_ter(ter$, "J", "", "images/ground/swamp", 1, "0000", OPA_None)
    build_ter(ter$, "C", "", "images/ground/swamp", 1, "0000", OPA_None)

    build_ter(ter$, "#", "", "images/wall/wall_brick", 1, "1111", OPA_Full)
    build_ter(ter$, "_", "", "images/floor/floor_brick", 1, "0000", OPA_None)
	;

def(takeme(place))
	if(lt(st_get_prop("player","bag_room"),place),
		do(
			output("В заплечном мешке нет места!"),
			return(0)
		),
		st_prop("player","bag_room",sub(st_get_prop("player","bag_room"),place))
	)
	output("In bag ",st_get_prop("player","bag_room"))
	return(1)
	;

def(dropme())
	st_prop("player","bag_room",add(st_get_prop("player","bag_room"),
		st_get_prop(targetid$,"place")))
	output("В мешке",st_get_prop("player","bag_room"))
	return(1)
	;

def(player_teleport(mapid$, x, y))
    if(ne(actorid$,"player"), return(0))
    th_moveto("player", mapid$, x, y, 1)
    return(0)
    ;

def(wounded())
    let(id$,create_cr$("Раненый разбойник","","images/people/beggar1", 1, 1,1,1,1,1,"world",38,66))
    st_trigger(id$,wounded_talk())
    ;

def(wounded_talk())
	if(eq(alert("Trader","Здравствуй, добрый человек!\nЯ торговец, на меня напали разбойники и ограбили. Недолго мне осталось.\nЯ очень хочу пить, дай мне немного воды.",
		"Да|Нет",1,2,"images/people/beggar1_0n.gif"),1),reward_for_water())
	th_remove(targetid$,1)
	;

def(no_remove())
	output("Это нельзя выбросить")
	return(0)
	;

def(reward_for_water())
	if(not(st_get_prop("player","bulb_water")),do(alert("Игрок","Прости, у меня нет для тебя воды.","OK",
		1,1,"images/player/hero_0e.gif"),return(0)))
	st_prop("player","bulb_water",0)
	output(BULB$)
	let(i$,"На первом перекрестке иди прямо.\nКогда увидишь 2 яблони,\nрой между ними.")
	alert("Торговец",join$("Большое спасибо. Я тебя отблагодарю.\n",i$,"\nТам я зарыл все свое добро."),"OK",
		1,1,"images/people/beggar1_0n.gif")
	let(id$,info$(i$))
    st_trigger(id$,treasure(26,66))
	;

def(drink_bulb())
	let(bw,st_get_prop("player","bulb_water"))
	if(eq(bw,0), do(output(BULB$),return(0)))
	if(HP_recover(targetid$),do(
		st_prop("player","bulb_water",sub(bw,2)),
		output("Вы делаете глоток из фляги и чувствуете себя лучше."),
		return(1)
	))
	;

def(treasure(x,y))
	if(and(eq(th_get_x("player"),x),eq(th_get_y("player"),y)),
		do(
				decr(y),
				th_remove(targetid$,1),
				output("Вы нашли сокровище!"),
				build_gold("world",x,y,10),
				let(i$,create_it$("Серебряное кольцо","images/item/ring_cyan",1,1)),
				th_moveto(i$,"world",x,y),
				st_trigger(i$,use_ring_cyan()),
				it_takefunc(i$,ring_cyan_luck()),
				it_dropfunc(i$,dropme()),
				let(is$,create_it$("Светильник","images/item/lamp",1,1)),
			    takedrop(is$,1),
			    st_trigger(is$,use_lamp()),
				th_moveto(is$,"world",x,y),
			),
			output("Здесь ничего нет!")
	)
	;

def(takedrop(id$,place))
	st_prop(id$,"place",place)
	it_takefunc(id$,takeme(place))
	it_dropfunc(id$,dropme())
	;

def(build_gold(mapid$,x,y,gold))
    let(id$,tempid$())
    it_new(id$,"Золото")
    th_tile(id$,0,"images/item/gold",1,1)
    it_takefunc(id$,take_gold(gold))
    th_moveto(id$,mapid$,x,y)
    return(id$)
    ;

def(take_gold(gold))
	if(ne(actorid$,"player"),return(0))
	th_gold("player",add(th_get_gold("player"),gold))
	output("Вы нашли ",gold," золота!")
	th_remove(targetid$,1)
	return(0)
	;

def(use_lamp())
	no_use()
	;

def(use_ring_cyan())
	no_use()
	;

def(use_diamond())
	if(q_is("Trader present"),do(th_remove(targetid$,1),trader_info()))
	no_use()
	;

def(use_gold_whistler())
	no_use()
	;

def(ring_cyan_luck())
	let(t,takeme(1))
	if(t,st_prop("player","luck",add(st_get_prop("player","luck"),1)))
	return(t)
	;

def(spider_reward())
	let(i$,create_it$("Бриллиант","images/item/gem_big_sapphire",1,1))
	takedrop(i$,1)
	st_trigger(i$,use_diamond())
	th_moveto(i$, "world", 44, 62)
	let(i$,create_it$("Золотой свисток","images/item/music1",1,1))
	takedrop(i$,1)
	st_trigger(i$,use_gold_whistler())
	th_moveto(i$, "world", 44, 62)
	output("Гигантский паук мертв, и Вы находите\nкое-что на его дереве...")
	;

def(spider(with_reward))
    let(id$,create_cr$("Гигантский паук","h","images/creature/spider2", 1, 2, 10,5,5,5, "world", 43, 61))
    enemy(id$)
   	if(with_reward,cr_defeat(id$,spider_reward()))
	;

def(set_stats(id$,body,speed,mind,presence,max))
    th_statboth(id$, ST_Body, body)
    th_statboth(id$, ST_Speed, speed)
    th_statboth(id$, ST_Mind, mind)
    th_statboth(id$, ST_Presence, presence)
    en_secondary(id$)
	;

def(create_cr$(name$,brain$,image$,nframes,nfacings,body,speed,mind,presence,mapid$,x,y))
    let(id$,tempid$())
    cr_new(id$, name$)
    cr_brain(id$, brain$)
    th_tile(id$, 0, image$,nframes,nfacings)
	set_stats(id$,body,speed,mind,presence,0)
	cr_faction(id$,0)
	th_moveto(id$,mapid$,x,y)
    return(id$)
    ;

def(create_it$(name$,image$,nframes,nfacings))
    let(id$,tempid$())
    it_new(id$, name$)
    th_tile(id$, 0, image$,nframes,nfacings)
    return(id$)
    ;

def(create_bl$(name$,image$,mapid$,x,y,nframes,nfacings))
    let(id$,tempid$())
    bl_new(id$, name$)
    th_tile(id$, 0, image$,nframes,nfacings)
    th_moveto(id$,mapid$,x,y)
    return(id$)
    ;
    
def(dryad())
	let(f$,create_cr$("Лесовичок","","images/creature/dryad",1,2,8,3,8,0,"world",36,62))
	st_trigger(f$,dryad_talk())
	cr_defeat(f$,dryad_defeat())
	;

def(dryad_talk())
	let(ch,menu("Лесовичок","Я охраняю эти леса. Что Вы делаете в моих владениях?",
		"Я собираюсь драться с Барладом Дэртом|Я хочу спасти Принцессу|Просто прогуливаюсь|<Атаковать Лесовичка>",0,
		"images/creature/dryad_0n.gif"))
	if(eq(ch,4),do(enemy(targetid$),return(0)))
	if(eq(ch,3),
		do(
			alert(st_get_name$(targetid$),"Что ж, я помогу тебе выбраться отсюда!","OK",1,1,"images/creature/dryad_0n.gif"),
			th_moveto("player","world",73,20),
			return(0)
		)
	)
	alert(st_get_name$(targetid$),"Я помогу тебе. Иди за моим клубочком,\nон покажет безопасный путь. Пока!","OK",1,1,"images/creature/dryad_0n.gif")
	let(r$,create_cr$("Волшебный клубочек","pnnnnnnwwnnwwwwwswwwwwnnnwnnwnnennwnnwnnneeenennnwnn","images/item/rope",1,1,0,30,0,0,"world", 36,61))
	en_turn(r$,auto_move(34))
	th_blocking(r$,1)
	th_remove(targetid$,1)
	;

def(dryad_defeat())
	let(i$,create_it$("Серебряный свисток","images/item/music3_cyan",1,1))
	takedrop(i$,1)
	st_trigger(i$,use_silver_whistler())
	th_moveto(i$, "world", th_get_x(targetid$),th_get_y(targetid$))
	;

def(use_silver_whistler())
	if(q_is("Trader present"),do(
		let(ch,alert("Торговец","Хороший свисток, но что мне с ним делать?\nДобавите еще 2 золотых?",
			YESNO$,1,2,"images/people/citizen2_0n.gif")),
		if(eq(ch,1),
			if(goldcost(2),do(
				pl_drop("player",targetid$),
				th_remove(targetid$,1),
				trader_info(),
				return(0)
			))
		),
		trader_leave()
	))		 
	;

def(auto_move(y))
	if(ne(th_get_y(actorid$),y),return(0))
	th_remove(actorid$,1)
	;

def(hien())
	let(f$,create_cr$("Гиена","","images/creature/dog1",1,2,7,3,8,0,"world",32,56))
	st_trigger(f$,hien_talk())
	;

def(hien_talk())
	let(ch,menu(GAME$,"Ваш путь преградила Гиена.",
		"<Спросить, что ей нужно>|<Напасть на Гиену>",0,"images/creature/dog1_0n.gif"))
	if(eq(ch,2),do(enemy(targetid$),return(0)))
	if(eq(ch,1),do(
		alert("Гиена","О, я так рада хоть с кем-то поговорить!\nЕсли встретите разбойников, передайте от меня привет.",
			"OK",1,1,"images/creature/dog1_0n.gif"),
		st_trigger(info$("Гиена передает привет разбойникам"),hien_word()),
	))
	th_remove(targetid$,1)
	;

def(hien_word())
	if(q_is("assassins"),do(
		ass_reward("О, Вы знаете Гиену!"),
		th_remove(targetid$,1),
		return(1)
	))
	no_use()
	;

def(info$(text$))
    let(id$,create_it$(text$,"images/item/paper_blue",1,1))
    pl_take("player",id$)
    return(id$)
    ;

def(no_use())
	output("Это здесь ни к чему!")
	;

def(small_village())
	data(
		7,55,	8,55,	4,56,	10,56,	11,56,	5,57,	8,57,	11,57,	13,57,
		6,58,	16,58,	7,59,	8,59,	10,59,	14,59,	16,59,
		9,60,	11,60,	14,60,	15,60,	11,61,	12,61,	13,62,	-1,-1
	)
	data(
		4, 2,	4, 5,	2, 1,	4, 2,	4, 3,	6, 7,	4, 2,	4, 3,	6, 7,
		4, 2,	4, 3,	6, 7,	4, 3,	6, 7,	4, 2,	4, 2,	4, 3,	6, 4,
		6, 4,	6, 5,	8, 1,	6, 4,	6, 0,	6, 0,	8, 2,	8, 2,	8, 2,
		8, 2,	8, 7,	2, 3,	8, 2,	8, 7,	2, 3,	8, 7,	2, 3,	8, 2,
		8,7,	2,3,	8,7,	2,3,	8,2,	8,7,	2,8,	2,8,	-1,-1
	)
	let(id$,tempid$())
	bl_new(id$,"Колодец")
	th_tile(id$,0,"images/dungeon/well1",1,1)
	st_trigger(id$,well())
	th_moveto(id$,"world",13,59)
	let(x,read())
	let(y,read())
	while(ge(x,0),
		let(id$,tempid$()),
		bl_new(id$,"Дом"),
		th_tile(id$,0,"images/wild/house_stilts",1,1),
		th_moveto(id$,"world",x,y),
		let(x, read()), let(y, read())
	)	
	let(xx,5)
	let(yy,54)
	let(x,read())
	let(z,read())
	while(ge(x,0),
		if(eq(x,2), decr(yy) ),
		if(eq(x,4), incr(xx) ),
		if(eq(x,6), incr(yy) ),
		if(eq(x,8), decr(xx) ),
		if(z,
			do(
			let(id$,tempid$()),
			bl_new(id$,"Изгородь"),
			if(eq(z,1), th_tile(id$,0,"images/wild/fence_white_es",1,1)),
			if(eq(z,3), th_tile(id$,0,"images/wild/fence_white_sw",1,1)),
			if(eq(z,5), th_tile(id$,0,"images/wild/fence_white_nw",1,1)),
			if(eq(z,7), th_tile(id$,0,"images/wild/fence_white_ne",1,1)),
			if(eq(z,2), th_tile(id$,0,"images/wild/fence_white_ew",1,1)),
			if(eq(z,8), th_tile(id$,0,"images/wild/fence_white_nsw",1,1)),
			if(eq(z,4), th_tile(id$,0,"images/wild/fence_white_nes",1,1)),
			th_moveto(id$,"world",xx,yy)
		)),
		let(x, read()),
		let(z, read())
	)	
	let(iid$,create_cr$("Старик","","images/people/old_citizen3",1,2,1,1,1,1,"world",15,59))
	st_trigger(iid$,old1_talk())
	return(1)
	;

def(well())
	let(ch,menu(GAME$,"Перед Вами колодец, полный воды.",
		"Попить воды|Наполнить флягу",1,"images/dungeon/well1_0n"))
	if(eq(ch,1),output("Попив воды, вы чувствуете себя получше."))
	if(eq(ch,2),
		if(eq(st_get_prop("player","bulb_water"),4),
			output("Ваша фляга уже наполнена."),
		do(
			output("Ваша фляга снова полна и может\nиспользоваться как прежде."),
			st_prop("player","bulb_water",4)
		))
	)
	;

def(debugWhereAmI())
	output("Вы в клетке ",th_get_x("player"),", ",th_get_y("player"))
	;

def(debugTeleport())
	let(dest$,inputdlg$("Телепортация","Куда Вас телепортировать?",""))
	let(firstof,instr(dest$," "))
#	if(gt(firstof,1),return(0))
	let(x,val(mid$(dest$,1,decr(firstof))))
	let(y,val(mid$(dest$,incr(firstof))))
	if(mul(x,y),do(
		th_moveto("player","world",x,y,1),
		output("Телепортация завершена."),
		redraw(),
		th_moveto("player","world",x,y)
	))
	;
	
def(old1_talk())
	let(gif$,"images/people/old_citizen3_0n.gif")
	alert("Старик","Я так одинок, добрый человек. Несколько месяцев назад здесь\nбыла большая счастливая деревня, но люди покинули ее.\nЯ последний остался...","OK",1,1,gif$)
	let(ch,menu(GAME$,join$(TOSAY$,"ему?"),"Иду биться с чародеем|Куда ведет эта дорога?|<Покинуть деревню>",
		0,gif$))
	if(eq(ch,1),
		do(
			alert("Старик","Я дам тебе несколько советов. Дорога от деревни идет\nмеж Коричневых топей. Не сворачивай с нее!\n\nСамые сильные слуги Барлада Дэрта - Зеленые Рыцари.\nОни знают могущественные заклятия, а некоторые\nмогут отражать, особенно заклятие Копии.",
				"OK",1,1,gif$)
		)
	)
	if(eq(ch,2),alert(GAME$,"Старик становится подозрительным и умолкает.\nВам придется покинуть деревню...",
		"OK",1,1,gif$))
	st_trigger(targetid$,0)
	;

def(tick_set(m))
	global(Moves,m)
	;
	
def(three_assassins())
	global(ENTCOUNT,3)
	for(i,1,ENTCOUNT,1,do(
		global(ENT$[i],create_cr$("Разбойник","h","images/people/assassin1",1,2,add(i,11),add(i,9),1,1,"world",add(14,mul(i,2)),30)),
		cr_faction(ENT$[i],1)
		)
	)
	cr_defeat(ENT$[3],ass_defeat())
	tick_set(2)
	st_trigger("world",quest_tick())
	redraw()
	alert(GAME$,"Дорогу Вам преграждают 3 разбойника.\nОни собираются убить Вас и ограбить...","OK",1,1)
	let(as$,"Разбойники")
	let(ch,menu(as$,join$(TOSAY$,"им?"),"Я отдам вам все деньги|Я иду драться с волшебником|Я встретил вашего знакомого|",
		0,"images/people/assassin1_0n.gif"))
	if(eq(ch,1),alert(as$,"Парень, ты и так нам отдашь все!","OK",1,1))
	if(eq(ch,2),ass_reward("Правда? Мы тебе поможем."))
	if(eq(ch,3),do(
		alert(as$,"И кого же ты видел?","OK",1,1),
		quest("assassins")
	))
	;

def(remove_entities())
	for(i,1,ENTCOUNT,1,if(st_exists(ENT$[i]),th_remove(ENT$[i],1)))
	global(ENTCOUNT,0)
	;

def(ass_reward(txt$))
	alert("Разбойники",join$(txt$,"\nВот перо аиста. Может пригодиться... Если пойдешь отсюда направо,\nпридешь к мосту неподалеку от Черного Замка. Бывай!"),"OK",1,1)
	build_stork$()
	remove_entities()
	;
	
def(build_stork$())
	let(id$,create_it$("Перо аиста","images/item/wand_cyan",1,1))
	takedrop(id$,1)
	th_moveto(id$,"world",17,30)
	st_trigger(id$,use_stork_feather())
	return(id$)
	;

def(quest(txt$))
	global(QUEST$,txt$)
	output("QUEST$->",QUEST$)
	;

def(q_is(txt$))
	return(eq(QUEST$,txt$))
	;

def(quest_tick())
	if(not(Moves),
		do(
			st_trigger("world",0),
			quest("")
		),
		if(eq(targetid$,"player"),
			global(Moves,sub(Moves,1))
		)
	)
	;

def(ass_defeat())
	let(x,th_get_x(ENT$[3])) 
	let(y,th_get_y(ENT$[3])) 
	th_moveto(build_stork$(),"world",x,y)
	build_gold("world",x,y,7)
	let(id$,create_it$("Бронзовый кувшин","images/item/potion_tan",1,1))
	takedrop(id$,1)
	st_trigger(id$,use_bronze_jug())
	th_moveto(id$,"world",x,y)
	;

def(use_stork_feather())
	;

def(use_bronze_jug())
	;

def(_buildings())
	let(id$,create_bl$("Таверна","images/wild/house_stone","world",59,63,1,1))
	st_trigger(id$,aquatic_inn())
	let(id$,create_bl$("Магазинчик","images/wild/house_stone","world",51,54,1,1))
	st_trigger(id$,output("Магазинчик закрыт."))
	let(id$,create_bl$("Маленький домик","images/wild/house_stone","world",25,50,1,1))
	let(id$,create_bl$("Указатель без надписи","images/wild/sign_plank","world",24,47,1,1))
	;

def(aquatic_inn())
	if(ne(actorid$,"player"),return(0))
	output("Вы входите в таверну Водяного")
	st_trigger(targetid$,output("Вы уже были в таверне!"))
	map_new("aqua_inn","Aquatic inn",9,8)
	map_bounds("aqua_inn",th_moveto("player","world",58,63))
    map_fill("aqua_inn", 0, 0, Terrain$[""], join$(
		"#########\n",
		"#~______#\n",
		"#~B~~___#\n",
		"#~B~~___#\n",
		"#~B~~~~~#\n",
		"#~B~~~~~#\n",
		"#_______#\n",
		"###_#####\n",
	))	
	th_moveto("player","aqua_inn",2,6)
	th_facing("player",North)
	let(a$,create_cr$("Водяной","pnnww","images/creature/deepone1",1,2,9,9,20,0,"aqua_inn",7,3))
	en_turn(a$,aquatic_move(6))
	st_trigger(a$,aquatic_welcome())
	return(0)
	;

def(aquatic_move(x))
	if(ne(th_get_x(actorid$),x),return(0))
	en_turn(actorid$,0)
	cr_brain(actorid$,"")
	;

def(aquatic_welcome())
	alert("Водяной","Добро пожаловать в мою таверну.\nБудьте здесь как дома.\nХотите купить жареную рыбу, попить воды?",
		"OK",1,1,"images/creature/deepone1_0n.gif")
	st_trigger(targetid$,aquatic_talk())
	aquatic_talk()
	;
def(aquatic_talk())
	let(ch,menu(GAME$,join$("У вас ",th_get_gold(actorid$)," золота.\n",TODO$),"<Купить жареную рыбу за 1 золотой (2 HP)>|<Выпить воды за 2 золотых>|<Напасть на Водяного>|<Поблагодарить и выйти из таверны>",
		1,"images/creature/deepone1_0n.gif"))
	if(eq(ch,1),buy_item("Жареная рыба","images/item/food_taco","aqua_inn",7,1,1,2))
	if(eq(ch,2),do(
		output("Вы с удовольствием пьете воду..."),
        wait(3),
        output("   и внезапно падаете без чувств..."),
        gcls(),
        gcolor("black"),
        gmove(0, 0),
        gfillrect(VIEW_SIZE, VIEW_SIZE),
        redraw(),
        wait(5),
        gcls(),
        th_moveto("player","world",37,42),
        let(i,0),
        while(lt(i,pl_get_item_count("player")),
        	let(id$,pl_get_item$("player",i)),
        	if(eq(id$,"Bulb"),incr(i),th_remove(id$,1))
        ),
		st_prop("player","bag_room",0),
		th_gold("player",0),
		output("Вы просыпаетесь в незнакомом месте.\nЗолото и заплечный мешок исчезли!\nВодяной ограбил Вас!!!"),
        redraw()
	))
	if(eq(ch,3),enemy(targetid$))
	if(eq(ch,4),do(output("Вы покидаете таверну."),th_moveto("player","world",58,63)))
	;

def(goldcost(cost))
    if(lt(th_get_gold("player"),cost),
        do(describe("У Вас не хватает денег."), return(0)) )
    th_gold("player",sub(th_get_gold("player"),cost))
    return(1)
	;
	
def(buy_item(name$,image$,mapid$,x,y,cost,food))
    if(not(goldcost(cost)),return(0))
    global(BUY$,create_it$(name$,image$,1,1))
    takedrop(BUY$,1)
    th_moveto(BUY$,mapid$,x,y)
    if(food,make_food(BUY$,food))
	;	

def(enemy(id$))
	cr_faction(id$,1)
	cr_brain(id$,"h")
	st_trigger(id$,0)
	;

def(HP_recover(id$))
	let(hp,th_get_stat("player",ST_HitPoints))
	if(eq(hp,th_get_statmax("player",ST_HitPoints)),
		do(output("Вам не нужно восстанавливать HP!"),return(0)))
	th_stat("player",ST_HitPoints,add(hp,st_get_prop(id$,"hp")))
	return(1)
	;

def(eat_food())
	if(HP_recover(targetid$),do(
		output(st_get_name$(targetid$)," улучшает самочувствие."),
		th_remove(targetid$,1)
	))
	;

def(make_food(id$,hp))
	st_prop(id$,"hp",hp)
	st_trigger(id$,eat_food())
	;

def(trader_appear$())
	let(id$,create_cr$("Торговец","","images/people/citizen2",1,2,14,10,1,1,"world",50,54))
	st_trigger(id$,trader_welcome())
	return(id$)
	;

def(trader_disappear(id$))
	if(st_exists(id$),th_remove(id$,1))
	st_trigger("no_trader",0)
	return(1)
	;
	
def(trader_welcome())
	let(ch,alert("Торговец","Как дела, парень?\nХочешь зайти в мой магазинчик?",
		YESNO$,1,2,"images/people/citizen2_0n.gif"))
	if(eq(ch,2),do(trader_disappear(targetid$),return(1)))
	output("Вы заходите в магазинчик.")
	map_new("shop","Trader's shop",7,8)
        map_fill("shop", 0, 0, Terrain$[""], join$(
		"#######\n",
		"#_____#\n",
		"#_____#\n",
		"#_____#\n",
		"#_____#\n",
		"______#\n",
		"#_____#\n",
		"#######\n",
	))	
	create_bl$("Часы","images/dungeon/clock","shop",5,1,1,2)
	create_bl$("Лавка","images/dungeon/bench2_ns","shop",1,1,1,1)
	create_bl$("Окно","images/dungeon/window_big","shop",3,0,1,1)
	global(I$[0],create_bl$("Стол","images/dungeon/counter_ns1","shop",3,2,1,1))
	st_trigger(I$[0],trader_buy(targetid$))
	let(tbl$,"Стол")
	global(I$[1],create_bl$(tbl$,"images/dungeon/counter_ns2","shop",3,3,1,1))
	st_trigger(I$[1],trader_buy(targetid$))
	global(I$[2],create_bl$(tbl$,"images/dungeon/counter_ns2","shop",3,4,1,1))
	st_trigger(I$[2],trader_buy(targetid$))
	global(I$[3],create_bl$(tbl$,"images/dungeon/counter_ns2","shop",3,5,1,1))
	st_trigger(I$[3],trader_buy(targetid$))
	global(I$[4],create_bl$(tbl$,"images/dungeon/counter_ns3","shop",3,6,1,1))
	st_trigger(I$[4],trader_buy(targetid$))
	th_moveto("player","shop",1,5)
	th_facing("player",East)
	th_moveto(targetid$,"shop",4,4)
	st_trigger(targetid$,do(
		enemy(targetid$),
		for(i,0,4,1,st_trigger(I$[i],0)),
		quest("")
		))
	cr_defeat(targetid$,trader_dead())
	map_bounds("shop",trader_leave())
	return(1)
	;

def(trader_buy(id$))
	let(ch,menu("Торговец","Вот мои товары:",
		"Картошка (1 HP за 1 золотой)|Виноград (2 HP за 2 золотых)|Морковь (1 HP за 1 золотой)|Капуста (2 HP за 2 золотых)|Молоко (3 HP за 2 золотых)|<Поговорить с торговцем>",
		1,"images/people/citizen2_0n.gif"))
	if(not(ch),return(0)) 
	if(eq(ch,6),do(trader_talk(id$),return(0)))
	if(eq(ch,1),buy_item("Картошка (1 HP)","images/item/brain","shop",th_get_x("player"),sub(th_get_y("player"),1),1,1))
	if(eq(ch,2),buy_item("Виноград (2 HP)","images/item/food_grapes","shop",th_get_x("player"),sub(th_get_y("player"),1),2,2))
	if(eq(ch,3),buy_item("Морковь (1 HP)","images/item/food_carrots","shop",th_get_x("player"),sub(th_get_y("player"),1),1,1))
	if(eq(ch,4),buy_item("Капуста (2 HP)","images/item/food_cabbage","shop",th_get_x("player"),sub(th_get_y("player"),1),1,1))
	if(eq(ch,5),buy_item("Молоко (3 HP)","images/item/potion_grey","shop",th_get_x("player"),sub(th_get_y("player"),1),2,3))
	return(1)
	;

def(trader_dead())
	buy_item("Картошка (1 HP)","images/item/brain","shop",5,2,0,1)
	buy_item("Виноград (2 HP)","images/item/food_grapes","shop",5,3,0,2)
	buy_item("Морковь (1 HP)","images/item/food_carrots","shop",5,4,0,1)
	buy_item("Капуста (2 HP)","images/item/food_cabbage","shop",5,5,0,1)
	buy_item("Молоко (3 HP)","images/item/potion_grey","shop",5,6,0,3)
	build_gold("shop",4,6,10)
	check_luck()
	;

def(trader_talk(i$))
	let(tr$,"Торговец")
	alert(tr$,"Вокруг нет опасности. Обычный лес.\nПосетителей у меня было много, но никто не возвращался.\nЗдесь безопасно, просто Вы заблудились.",
		"OK",1,1,"images/people/citizen2_0n.gif")
	let(ch,menu(tr$,join$(TOSAY$,"ему?"),"Я ищу Черный Замок|Я собираюсь победить Барлада Дэрта|Хочу разбудить Принцессу|Просто гуляю по лесу|<Напасть на торговца>",
		0,"images/people/citizen2_0n.gif"))
	if(eq(ch,4),do(
		alert(tr$,"Тогда приятной прогулки. До свидания!",
			"OK",1,1,"images/people/citizen2_0n.gif"),
		trader_leave(),
		return(1)
	))
	if(eq(ch,5),do(enemy(i$),return(0)))
	let(ch,menu(tr$,join$("Я могу рассказать кое-что интересное за 7 золотых или какой-нибудь подарок.\n",TODO$),
		"Заплатите 7 золотых|Дадите подарок|Уйдете",0,"images/people/citizen2_0n.gif"))
	if(eq(ch,2),do(
		alert(tr$,"Что Вы можете мне подарить?...","OK",1,1),
		quest("Trader present"),
		return(0)
	))
	if(eq(ch,1),if(goldcost(7),trader_info()))
	if(eq(ch,3),trader_leave())
	;

def(trader_info())
	alert("Торговец","Могу рассказать, куда ведут дороги отсюда.\nСправа в лесу - Застава волшебника.\nЕсли пойдете налево, увидите маленькую хижину, в которой живет старик.\nЧерный Замок действительно существует, но до него еще далеко.\nСоветую Вам не прятаться, а идти туда в открытую.\nВот все, что я знаю!!! Пока.",
		"OK",1,1,"images/people/citizen2_0n.gif")
	trader_leave()
	;

def(trader_leave())
	output("Вы покидаете магазинчик.")
	quest("")
	th_moveto("player","world",50,54)
	for(i,0,4,1,th_remove(I$[i],1))
	;

def(guide_talk())
	let(tr$,"Проводник")
	st_trigger(targetid$,0)
	alert(tr$,"Я помогаю заблудившимся путникам. Как,\nвы не заблудились? Я все равно помогу вам. Поешьте.\nКуда вам надо? В одиночку можно погибнуть в болотах,\nа их вокруг множество. За 2 золотых я помогу вам.",
		"OK",1,1,"images/people/citizen5_1e.gif")
	th_stat("player",ST_HitPoints,add(2,th_get_stat("player",ST_HitPoints)))
	let(ch,guide_answer(1))
	if(eq(ch,2),do(
		alert(tr$,"Нет-нет, вокруг никакого жилья нет. Только\nлеса и болота. Правда,есть одно интересное\nместечко в самом центре леса. Черный Замок\nназывается. Слышали о таком?",
			"OK",1,1,"images/people/citizen5_1e.gif"),
		let(ch,guide_answer(0))
	))
	if(eq(ch,1),do(
		let(al,alert(tr$,"Я это сразу понял. Я сам ненавижу волшебника и уже\nпомогал вашим предшественникам. Но это будет\nстоить 2 золотых.",
			"Заплатить|Уйти",1,2,"images/people/citizen5_1e.gif")),
		if(eq(al,1),do(
			th_gold("player",sub(th_get_gold("player"),2)),
			alert(tr$,"Благодарю вас. Пойдемте...","OK",1,1,"images/people/citizen5_1e.gif"),
			guide_to_death(targetid$)
		))
	))
#	th_remove(targetid$,1)
	;

def(guide())
	let(id$,create_cr$("Проводник","","images/people/citizen5",2,2,1,1,1,1,"world",24,50))
	st_trigger(id$,guide_talk())
	;
	
def(guide_answer(acc))
	let(s$,"Я ищу Барлада Дэрта|")
	if(eq(acc,1),do(joinv$(s$,"Проводите меня к ближайшему селению|")))
	joinv$(s$,"<Отказаться и уйти>")
	let(ch,menu("Проводник",join$(TOSAY$,"ему?"),s$,0,"images/people/citizen5_1e.gif"))
	return(ch)
	;
	
def(guide_to_death(guide$))
	pause()
	move_rel("player",2)
		move_rel(guide$,8)
		redraw()
		wait(0.5)
	move_rel("player",8)
		move_rel(guide$,2)
		redraw()
		wait(0.5)
	move_rel("player",8)
		move_rel(guide$,8)
		redraw()
		wait(0.5)
	move_rel("player",8)
		move_rel(guide$,8)
		redraw()
		wait(0.5)
	move_rel("player",8)
		move_rel(guide$,8)
		redraw()
		wait(0.5)
	move_rel("player",6)
		move_rel(guide$,8)
		redraw()
		wait(0.5)
	move_rel("player",8)
		move_rel(guide$,6)
		redraw()
		wait(0.5)
	move_rel("player",8)
		move_rel(guide$,8)
		redraw()
		wait(0.5)
	move_rel("player",8)
		move_rel(guide$,1)
		redraw()
		wait(0.5)
	move_rel("player",8)
		move_rel(guide$,1)
		redraw()
		wait(0.5)
	resume()
	;
	
def(move_rel(i$,rel_dir))
	let(xx,th_get_x(i$))
	let(yy,th_get_y(i$))
	if(eq(rel_dir,2), decr(yy) )
	if(eq(rel_dir,4), incr(xx) )
	if(eq(rel_dir,6), incr(yy) )
	if(eq(rel_dir,8), decr(xx) )
	th_moveto(i$,"world",xx,yy,1)
	;

def(gk_onway())
	let(gk$,create_cr$("Зеленый рыцарь","pwsssswsssssseess","images/people/frogman3",1,1,16,10,1,1,"world",3,40))
	en_turn(gk$,auto_move(51))
	st_trigger(gk$,gk_attack())
	let(ch,alert(GAME$,"За поворотом дороги слышен шум. Можете спрятаться\nсправа и понаблюдать.","OK",1,1))
	;	

def(gk_attack())
	en_turn(targetid$,0)
	enemy(targetid$)
	cr_defeat(targetid$,gk_defeat())
	;

def(gk_defeat())
	let(x,th_get_x(targetid$))	
	let(y,th_get_y(targetid$))	
	let(pl$,create_it$("Латы Зеленого Рыцаря","images/armor/scale_green",1,1))
	th_statboth(pl$,ST_Evade,-1)
	th_statboth(pl$,ST_Defense,2)
	it_equip(pl$,EQ_Armor)
	it_equipfunc(pl$,gk_scale_equip())
	it_removefunc(pl$,gk_scale_remove())
	th_moveto(pl$,"world",x,y)
	let(pl$,create_it$("Меч Зеленого Рыцаря","images/weapon/dagger9",1,1))
	th_statboth(pl$,ST_Attack,2)
	th_statboth(pl$,ST_Range,1)
	it_equip(pl$,EQ_Weapon)
	th_moveto(pl$,"world",x,y)
	;

def(gk_scale_equip())
    output_color("green", "black")
	output("Внимание!\nВы в латах Зеленого рыцаря.")
    output_color("white", "black")
	return(1)
	;
	
def(gk_scale_remove())
    output_color("green", "black")
	output("Вы снимаете латы Зеленого рыцаря.")
    output_color("white", "black")
	return(1)
	;

